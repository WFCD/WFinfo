<Window x:Class="WFInfo.Settings.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wfInfo="clr-namespace:WFInfo"
        xmlns:settings="clr-namespace:WFInfo.Settings"
        xmlns:components="clr-namespace:WFInfo.Components"
        mc:Ignorable="d"
        Title="Settings"
        MaxWidth="334"
        MinWidth="334"
        Height="594"
        BorderBrush="#FF707070"
        WindowStyle="None"
        FontSize="16"
        d:DataContext="{d:DesignInstance Type=settings:SettingsWindow}"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip">
    <Grid MouseDown="MouseDown"
          PreviewMouseDown="ActivationMouseDown"
          Background="#FF1B1B1B"
          MinWidth="334">
        <Grid.Resources>

            <Style x:Key="NestedBorder"
                   TargetType="Border">
                <Setter Property="BorderBrush"
                        Value="#FF646464" />
                <Setter Property="Padding"
                        Value="5, 2" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush"
                        Value="#FF646464" />
                <Setter Property="Padding"
                        Value="25, 5" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <Style x:Key="AllTextBoxes"
                   BasedOn="{StaticResource baseStyle}"
                   TargetType="TextBox">
                <Setter Property="Background"
                        Value="#FF0F0F0F" />
                <Setter Property="BorderBrush"
                        Value="#FFB1D0D9" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="0, 5" />
                <Setter Property="Padding"
                        Value="0,1,0,2.5" />
                <Setter Property="Cursor"
                        Value="Arrow" />
                <Setter Property="TextWrapping"
                        Value="Wrap" />
                <Setter Property="FontFamily"
                        Value="{StaticResource Roboto}" />
                <Setter Property="components:SelectTextOnFocus.Active"
                        Value="True" />
                <Setter Property="wfInfo:FocusAdvancement.AdvancesByEnterKey"
                        Value="True" />
            </Style>

            <Style TargetType="CheckBox"
                   BasedOn="{StaticResource baseStyle}">
                <Setter Property="Background"
                        Value="#FFB1D0D9" />
                <Setter Property="BorderBrush"
                        Value="#FF0F0F0F" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
            </Style>
            <Style BasedOn="{StaticResource AllTextBoxes}"
                   TargetType="TextBox" />
            <Style x:Key="KeyBindTextboxStyle"
                   BasedOn="{StaticResource AllTextBoxes}"
                   TargetType="TextBox">
                <Setter Property="components:SelectTextOnFocus.Active"
                        Value="False" />
                <Style.Triggers>
                    <Trigger Property="IsFocused"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="Transparent">
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <components:NegateIntConverter x:Key="NegateIntConverter" />
            <components:KeyStringConverter x:Key="KeyStringConverter" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid VerticalAlignment="Top"
              Grid.Row="0"
              Grid.ColumnSpan="2"
              Grid.Column="0">
            <Rectangle Fill="#FF0F0F0F"
                       Stroke="#FF646464" />
            <DockPanel>
                <Image HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Width="26"
                       DockPanel.Dock="Left"
                       Margin="2,0,5,1"
                       Source="../Resources/WFLogo.png" />
                <Label MouseLeftButtonDown="Hide"
                       Content="x"
                       Width="30"
                       Style="{StaticResource Label_Button}"
                       VerticalContentAlignment="Stretch"
                       DockPanel.Dock="Right" />
                <TextBlock Text="Settings"
                           VerticalAlignment="Center"
                           FontSize="16"
                           FontFamily="{StaticResource Roboto_Black}"
                           FontWeight="Bold" />
            </DockPanel>
        </Grid>
        <ScrollViewer Grid.Row="1"
                      Grid.Column="0">
            <StackPanel Orientation="Vertical">
                <Border DockPanel.Dock="Top">
                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom"
                              HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="WindowRadio"
                                         Grid.Column="1"
                                         Content="Window"
                                         ToolTip="Display rewards in a separate window"
                                         VerticalContentAlignment="Center"
                                         Checked="WindowChecked"
                                         Background="#FFB1D0D9"
                                         BorderBrush="#FF0F0F0F"
                                         HorizontalAlignment="Center" />
                            <RadioButton x:Name="OverlayRadio"
                                         Grid.Column="2"
                                         Content="Overlay"
                                         ToolTip="Display rewards on top of Warframe"
                                         VerticalContentAlignment="Center"
                                         Checked="OverlayChecked"
                                         Background="#FFB1D0D9"
                                         BorderBrush="#FF0F0F0F" />
                            <RadioButton x:Name="LightRadio"
                                         Grid.Column="0"
                                         Content="Light"
                                         ToolTip="Do not display any window at all"
                                         VerticalContentAlignment="Center"
                                         Checked="LightRadioChecked"
                                         Background="#FFB1D0D9"
                                         BorderBrush="#FF0F0F0F" />
                        </Grid>
                        <Label Content="Rewards display"
                               DockPanel.Dock="Top"
                               HorizontalAlignment="Center"
                               FontFamily="{StaticResource Roboto}"
                               Margin="0,0,-1,0" />
                    </DockPanel>
                </Border>
                <Border DockPanel.Dock="Top">
                    <UniformGrid>
                        <Label Content="Display time" />
                        <TextBox x:Name="Displaytime_number_box"
                                 ToolTip="The time in milliseconds the overlays will be displayed on screen"
                                 Text="{Binding SettingsViewModel.Delay, Mode=TwoWay}"
                                 components:NumericOnlyEntry.RegexFilter="^[0-9\.,]+$" />

                        <CheckBox x:Name="HighlightCheckbox"
                                  Content="Highlight"
                                  ToolTip="Highlight the best rewards on the overlay."
                                  IsChecked="{Binding SettingsViewModel.HighlightRewards, Mode=TwoWay}" />
                        <CheckBox x:Name="HighContrastCheckbox"
                                  Content="High contrast"
                                  ToolTip="Enable High contrast for the overlay."
                                  IsChecked="{Binding SettingsViewModel.HighContrast, Mode=TwoWay}" />
                    </UniformGrid>
                </Border>
                <Border x:Name="Overlay_sliders"
                        DockPanel.Dock="Top">
                    <DockPanel LastChildFill="False">
                        <Label Content="Overlay Offset"
                               DockPanel.Dock="Top"
                               HorizontalAlignment="Center"
                               FontFamily="{StaticResource Roboto}"
                               Margin="0,0,-1,0" />
                        <DockPanel LastChildFill="False"
                                   DockPanel.Dock="Top">
                            <Label Content="X"
                                   DockPanel.Dock="Left"
                                   HorizontalContentAlignment="Center"
                                   Width="32"
                                   ToolTip="The X Offset of the overlay. Positive values shift the overlay to the right." />
                            <TextBox x:Name="OverlayXOffset_number_box"
                                     DockPanel.Dock="Left"
                                     ToolTip="The X Offset of the overlay. Positive values shift the overlay to the right."
                                     TextWrapping="Wrap"
                                     Text="{Binding SettingsViewModel.OverlayXOffsetValue, Mode=TwoWay}"
                                     components:NumericOnlyEntry.RegexFilter="^-?[0-9]*$"
                                     Width="90" />

                            <TextBox x:Name="OverlayYOffset_number_box"
                                     DockPanel.Dock="Right"
                                     ToolTip="The Y Offset of the overlay. Positive values shift the overlay towards the top."
                                     Width="90"
                                     Text="{Binding SettingsViewModel.OverlayYOffsetValue, Mode=TwoWay
                             , Converter={StaticResource NegateIntConverter}}"
                                     components:NumericOnlyEntry.RegexFilter="^-?[0-9]*$" />
                            <Label Content="Y"
                                   DockPanel.Dock="Right"
                                   HorizontalContentAlignment="Center"
                                   Width="32"
                                   ToolTip="The Y Offset of the overlay. Positive values shift the overlay towards the top." />
                        </DockPanel>
                    </DockPanel>
                </Border>
                <Border DockPanel.Dock="Top">
                    <UniformGrid>
                        <Label Content="Snap Noise"
                               ToolTip="Snap-It item count noise filtering threshhold" />
                        <TextBox x:Name="SnapItCountThreshold_number_box"
                                 ToolTip="Threshold for number detection noise filtering. Higher = More aggressive, 3 or 4 usually works best"
                                 Text="{Binding SettingsViewModel.SnapItCountThreshold, Mode=TwoWay}"
                                 components:NumericOnlyEntry.RegexFilter="^[0-9\.,]+$"
                                 VerticalAlignment="Top" />

                        <CheckBox x:Name="SnapItemCountCheckbox"
                                  Content="Count Item"
                                  ToolTip="Scan for item amount using Snap-It"
                                  IsChecked="{Binding SettingsViewModel.DoSnapItCount, Mode=TwoWay}" />

                        <CheckBox x:Name="SnapItThreadCheckbox"
                                  Content="Multithread Snap"
                                  ToolTip="Speed up snap-it using multithreading"
                                  IsChecked="{Binding SettingsViewModel.SnapMultiThreaded, Mode=TwoWay}" />

                    </UniformGrid>
                </Border>
                <Border DockPanel.Dock="Top"
                        Padding="15 5 25 5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Content="Activation key"
                               Grid.Row="0"
                               Grid.Column="0" />
                        <TextBox x:Name="Activation_key_box"
                                 Style="{StaticResource KeyBindTextboxStyle}"
                                 Grid.Row="0"
                                 Grid.Column="1"
                                 ToolTip="Key to activate the processing. Use modifiers below to achieve other actions"
                                 Text="{Binding SettingsViewModel.ActivationKeyDisplay, Mode=OneWay}"
                                 IsReadOnly="True"
                                 KeyUp="ActivationUp"
                                 VerticalAlignment="Top" />
                        <TextBlock x:Name="hidden"
                                   Focusable="True"
                                   Visibility="Visible"
                                   IsEnabled="True"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   Text=""
                                   VerticalAlignment="Top"
                                   Height="1"
                                   Width="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   d:IsHidden="True" />
                        <Label Content="Search it modifier"
                               Grid.Row="1"
                               Grid.Column="0" />
                        <TextBox x:Name="Searchit_key_box"
                                 Style="{StaticResource KeyBindTextboxStyle}"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 ToolTip="Modifier to hold down to start search it"
                                 IsReadOnly="True"
                                 KeyUp="Searchit_key_box_KeyUp"
                                 Text="{Binding SettingsViewModel.SearchItModifierKey,
                                Converter={StaticResource KeyStringConverter}}"
                                 VerticalAlignment="Top" />
                        <Label Content="Snap it modifier"
                               Grid.Row="2"
                               Grid.Column="0" />
                        <TextBox x:Name="Snapit_key_box"
                                 Style="{StaticResource KeyBindTextboxStyle}"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 ToolTip="Modifier to hold down to start Snap it"
                                 Text="{Binding SettingsViewModel.SnapitModifierKey,
                                Converter={StaticResource KeyStringConverter}}"
                                 KeyUp="Snapit_key_box_KeyUp"
                                 IsReadOnly="True"
                                 VerticalAlignment="Top" />
                        <Label Content="Master it modifier"
                               Grid.Row="3"
                               Grid.Column="0" />
                        <TextBox x:Name="Masterit_key_box"
                                 Style="{StaticResource KeyBindTextboxStyle}"
                                 Grid.Row="3"
                                 Grid.Column="1"
                                 ToolTip="Modifier to hold down to start Snap it"
                                 Text="{Binding SettingsViewModel.MasterItModifierKey,
                                Converter={StaticResource KeyStringConverter}}"
                                 IsReadOnly="True"
                                 KeyUp="Masterit_key_box_KeyUp"
                                 VerticalAlignment="Top" />
                    </Grid>
                </Border>
                <Border DockPanel.Dock="Top"
                        Width="334">
                    <UniformGrid>
                        <Label Content="Efficiency min" />
                        <Label Content="Efficiency max" />
                        <TextBox ToolTip="Anything below this efficiency will be marked as red in snapit"
                                 Margin="0, 0, 20, 0"
                                 Text="{Binding SettingsViewModel.MinimumEfficiencyValue, Mode=TwoWay}"
                                 components:NumericOnlyEntry.RegexFilter="^[0-9\.,]+$"
                                 AutoWordSelection="True"
                                 VerticalAlignment="Top" />
                        <TextBox ToolTip="Anything above this efficiency will be marked as green in snapit"
                                 Text="{Binding SettingsViewModel.MaximumEfficiencyValue, Mode=TwoWay}"
                                 components:NumericOnlyEntry.RegexFilter="^[0-9\.,]+$"
                                 Margin="0, 0, 20, 0"
                                 VerticalAlignment="Top" />
                    </UniformGrid>
                </Border>
                <Border Padding="0"
                        DockPanel.Dock="Top">
                    <DockPanel>
                        <Label MouseLeftButtonDown="ClickCreateDebug"
                               Padding="5"
                               DockPanel.Dock="Right"
                               Content="Create debug zip"
                               FontWeight="Regular"
                               Style="{StaticResource Label_Button}" />
                        <Border Style="{StaticResource NestedBorder}"
                                DockPanel.Dock="Top">
                            <UniformGrid DockPanel.Dock="Top"
                                         Rows="1">

                                <Label Content="Locale"
                                       DockPanel.Dock="Left"
                                       FontSize="16"
                                       FontWeight="Regular" />
                                <ComboBox SelectionChanged="localeComboboxSelectionChanged"
                                          DockPanel.Dock="Right"
                                          x:Name="localeCombobox"
                                          FontSize="14"
                                          FontFamily="{DynamicResource Roboto}"
                                          Background="#FF1B1B1B"
                                          BorderBrush="#FF0F0F0F"
                                          Margin="0,4">
                                    <ComboBoxItem Tag="en"
                                                  Content="English"
                                                  FontSize="14"
                                                  Background="#FF1B1B1B" />
                                    <ComboBoxItem Tag="ko"
                                                  Content="한국어"
                                                  FontSize="14"
                                                  Background="#FF1B1B1B" />
                                </ComboBox>
                            </UniformGrid>
                        </Border>
                        <Border DockPanel.Dock="Top"
                                Style="{StaticResource NestedBorder}">
                            <CheckBox x:Name="clipboardCheckbox"
                                      Content="Clipboard"
                                      ToolTip="Copy the results from the OCR over to the clipboard for easy pasting into chat"
                                      IsChecked="{Binding SettingsViewModel.Clipboard, Mode=TwoWay}" />
                        </Border>
                        <Border DockPanel.Dock="Top"
                                Style="{StaticResource NestedBorder}">
                            <UniformGrid Rows="1">

                                <CheckBox x:Name="autoCheckbox"
                                          DockPanel.Dock="Right"
                                          Content="Auto"
                                          ToolTip="Automatically detects when the relic screen is visible."
                                          Click="AutoClicked" />
                                <CheckBox x:Name="Autolist"
                                          DockPanel.Dock="Left"
                                          Content="Auto list"
                                          ToolTip="Spawns a listing dialogue whenever the end of mission is detected, requires auto"
                                          IsChecked="{Binding SettingsViewModel.AutoList, Mode=TwoWay}" />
                            </UniformGrid>
                        </Border>
                    </DockPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>